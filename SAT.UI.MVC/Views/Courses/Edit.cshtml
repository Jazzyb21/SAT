@model SAT.DATA.EF.Course

@{
    ViewBag.Title = "Edit Course";
}




@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.CourseId)

    <div class="container-fluid" id="stuDetails">
        <div id="stuEditContent">
            <h2 class="text-center">@ViewBag.Title</h2>
            <ul>
                <li class="form-group row">
                    @Html.LabelFor(model => model.CourseName, htmlAttributes: new { @class = "col-form-label col-md-4" })
                    @Html.EditorFor(model => model.CourseName, new { htmlAttributes = new { @class = "form-control col-md-7" } })
                    @Html.ValidationMessageFor(model => model.CourseName, "", new { @class = "text-danger" })
                </li>

                <li class="form-group row">
                    @Html.LabelFor(model => model.CourseDescription, htmlAttributes: new { @class = "col-form-label col-md-4" })

                    @Html.EditorFor(model => model.CourseDescription, new { htmlAttributes = new { @class = "form-control col-md-7" } })
                    @Html.ValidationMessageFor(model => model.CourseDescription, "", new { @class = "text-danger" })

                </li>

                <li class="form-group row">
                    @Html.LabelFor(model => model.CreditHours, htmlAttributes: new { @class = "col-form-label col-md-4" })

                    @Html.EditorFor(model => model.CreditHours, new { htmlAttributes = new { @class = "form-control col-md-7" } })
                    @Html.ValidationMessageFor(model => model.CreditHours, "", new { @class = "text-danger" })

                </li>

                <li class="form-group row">
                    @Html.LabelFor(model => model.Curriculum, htmlAttributes: new { @class = "col-form-label col-md-4" })

                    @Html.EditorFor(model => model.Curriculum, new { htmlAttributes = new { @class = "form-control col-md-7" } })
                    @Html.ValidationMessageFor(model => model.Curriculum, "", new { @class = "text-danger" })

                </li>

                <li class="form-group row">
                    @Html.LabelFor(model => model.Notes, htmlAttributes: new { @class = "col-form-label col-md-4" })

                    @Html.EditorFor(model => model.Notes, new { htmlAttributes = new { @class = "form-control col-md-7" } })
                    @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })

                </li>

                <li class="form-group row">
                    @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "col-form-label col-md-4" })

                    <span class="checkbox">
                        @Html.EditorFor(model => model.IsActive)
                        @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                    </span>
                </li>
            </ul>

            <div class="clearfix"></div>   <div id="stuFooterRight">
                <input type="submit" value="Save" class="btn btn-success" />
            </div>
            <div id="stuFooterLeft">
                @Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-primary" })
            </div>
            <div class="clearfix"></div>

        </div>

    </div>

}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}


